package fracCalc;


import java.util.Scanner;


public class FracCalc {
	


    public static void main(String[] args) 
    {
        // TODO: Read the input from the user and call produceAnswer with an equation
   
    	System.out.println("Enter your operands, only two operands and a operator to compile.");
    	Scanner userInput = new Scanner(System.in);
    	String inputNum = userInput.nextLine();
    	while(inputNum != "quit"){
    		int[] answers = produceAnswer(inputNum);
    		System.out.print("whole:" + answers[0]);
    		System.out.print(" numerator:" + answers[1]);
    		System.out.print(" denominator:" + answers[2]);
    		
    		
    		
    		System.out.println(" ");
    		inputNum = userInput.nextLine();
    	}
    		
    	


    }
    
    // ** IMPORTANT ** DO NOT DELETE THIS FUNCTION.  This function will be used to test your code
    // This function takes a String 'input' and produces the result
    //
    // input is a fraction string that needs to be evaluated.  For your program, this will be the user input.
    //      e.g. input ==> "1/2 + 3/4"
    //        
    // The function should return the result of the fraction after it has been calculated
    //      e.g. return ==> "1_1/4"
    
    public static int[] produceAnswer(String input){
    	
    	String[] inputParse = parseInput(input); // Splits the expression from space; gets 1st Operand, 2nd Operand, & operator
    	
    	//Takes the output of parseInput, and splits to find the whole, numerator, and denominator
    	int[] firstOperand = parseOperand(inputParse[0]); // The first operand of the expression
    	int[] secondOperand = parseOperand(inputParse[2]);// The second operand of the expression
    	int[] operator = parseOperand(inputParse[1]);     // The operator of the expression
    	
    
    	return secondOperand;
    	
    	
    }
    public static String[] parseInput(String inputExpression){
       String[] inputArray = inputExpression.split("\\s+"); //must split from the space since it will not always be a "+" operator
       return inputArray;							        
       
    }
    
   public static int[] parseOperand(String num){
	  int[] individualNum = {0, 0, 0};// collects the integers for whole,numerator, and denominator
	  					  // index 0 = whole; index 1 = numerator; index 2 = denominator
	  
	//checks if the expression has a "_"
	  if(num.indexOf("_" ) > 0){  
		  
	      String[] wholeNumSplit = num.split("_"); //splits to get get the whole number
	      individualNum[0] = Integer.parseInt(wholeNumSplit[0]); //changes the string into the return type, integer
	        
	      String[] numeratorSplit = wholeNumSplit[1].split("/"); // splits to get the numerator and denominator
	      individualNum[1] = Integer.parseInt(numeratorSplit[0]);// the numerator
	      individualNum[2] = Integer.parseInt(numeratorSplit[1]);// the denominator 
	       
	      return individualNum;
	 
	  //checks if the expression has a "/"
      }else if(num.indexOf("/") > 0){ 
    	  String[] numeratorSplit = num.split("/"); // splits to get the numerator and denominator
    	  individualNum[1] = Integer.parseInt(numeratorSplit[0]);// the numerator
	      individualNum[2] = Integer.parseInt(numeratorSplit[1]);// the denominator 
	      
	      return individualNum;
	      
	  //If the expression does not have a "_" or "/" then it is a whole number   
      }else{ 
    	  individualNum[0] = Integer.parseInt(num); 
    	  return individualNum;
      }
	return individiualNum;
   }
   


   


}


